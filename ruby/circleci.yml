version: 2.1
jobs:
  build:
    docker:
      - image: ruby:latest
    working_directory: ~/ci
    steps:
      - checkout
      - restore_cache:
          keys:
            - ci-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
      - run:
          name: "Download Code Climate App"
          command: |
            curl -o ../cc-test-reporter -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 &&
            chmod +x ../cc-test-reporter
      - run: 'gem install bundler'
      - run:
          name: "Install Dependencies"
          command: |
            bundle install --path vendor/bundle
      - save_cache:
          key: ci-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
          paths:
            - "./vendor/bundle"
      - run:
          name: "Test & Upload the coverage"
          command: |
            ../cc-test-reporter before-build
            bundle exec rspec
            export EXIT_CODE=${?};
            ../cc-test-reporter after-build --exit-code $EXIT_CODE
      - persist_to_workspace:
          root: ../
          paths:
            - ci
  deploy:
    docker:
      - image: ruby:latest
    working_directory: ~/ci
    steps:
      - attach_workspace:
          at: ../
      - run:
          name: "Register credentials"
          command: |
            mkdir -p ~/.gem
            echo -e "---\r\n:rubygems_api_key: ${GEM_KEY}" > ~/.gem/credentials
            chmod 0600 ~/.gem/credentials
      - run:
          name: "Generate the package"
          command: "gem build archaeologist.gemspec"
      - run:
          name: "Deploy"
          command: "gem push archaeologist-${CIRCLE_TAG}.gem"

release_filter: &release_filter
  tags:
    only: /^(?:[0-9]+\.){2}[0-9].*/
  branches:
    ignore: /.*/

dev_filter: &dev_filter
  tags:
    ignore: /^(?:[0-9]+\.){2}[0-9].*/

workflows:
  version: 2
  default:
    jobs:
      - build:
          filters:
            << : *dev_filter
  version_tag:
    jobs:
      - build:
          filters:
            << : *release_filter
      - deploy:
          requires:
            - build
          filters:
            << : *release_filter
